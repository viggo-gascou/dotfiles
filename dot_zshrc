# -- INIT ---------------------------------------------------------------------

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# -- ZINIT --------------------------------------------------------------------

# MOVE ZCOMPDUMP AND SPEED UP LOADING
# FROM ZINIT README
# see zshcompsys(1) 'man zshcompsys' for meaning of '-C' option
declare -A ZINIT
ZINIT[ZCOMPDUMP_PATH]="${HOME}/.cache/zsh/.zcompdump-$ZSH_VERSION"
ZINIT[COMPINIT_OPTS]="-C"

# MOVE ZCOMPCACHE
zstyle ':completion::complete:*' cache-path "${HOME}/.cache/zsh/.zcompcache"


### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# -- SNIPPETS -----------------------------------------------------------------

zinit snippet OMZP::git/git.plugin.zsh

# -- PLUGINS ------------------------------------------------------------------

      #zsh-users/zsh-syntax-highlighting \
zinit ice depth=1
zinit light romkatv/powerlevel10k

zinit wait lucid for \
  atinit"zicompinit; zicdreplay" \
      zdharma-continuum/fast-syntax-highlighting \
  atload"_zsh_autosuggest_start" \
      zsh-users/zsh-autosuggestions \
  blockf atpull'zinit creinstall -q .' \
      zsh-users/zsh-completions \
      paulirish/git-open

zinit wait lucid from"gh-r" as"null" for \
     sbin"fzf"          junegunn/fzf \
     sbin"**/fd"        @sharkdp/fd \
     sbin"**/bat"       @sharkdp/bat \
     sbin"bin/exa"       ogham/exa

zinit light zsh-users/zsh-history-substring-search \

# -- SETINGS ------------------------------------------------------------------

eval $(thefuck --alias)

# Make the substring search only match if command starts with the same substring
# Usage from: https://bit.ly/zsh-substring-hist-conf
typeset -g HISTORY_SUBSTRING_SEARCH_PREFIXED='i'

export LS_COLORS=$(echo "$(vivid generate nord):*.plist=0;38;2;180;142;173:*.cson=0;38;2;180;142;173:\
  *.Rmd=0;38;2;180;142;173" | sed 's/ //g')

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' menu select

# -- PATH ---------------------------------------------------------------------

export PATH=$PATH:~/.local/bin
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# -- SYSTEM ENV ---------------------------------------------------------------

export EDITOR='lvim'
export VISUAL='$EDITOR'

export LANG="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export COLORTERM="truecolor"

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# -- ALIASES ------------------------------------------------------------------

# ZSH ALIASES

alias zshconfig='lvim ~/.zshrc'

# KITTY SPECIFIC ALIASES

alias icat='kitty +kitten icat'
alias diff='kitty +kitten diff'
alias kittytheme='kitty +kitten themes'
alias kittyconfig='lvim ~/.config/kitty/kitty.conf'
alias kittyupdate='~/bin_scripts/kitty_update.sh'

# BIN SCRIPT ALIASES

alias killicloud='~/bin_scripts/kill_icloud_drive.sh'
alias replace_icon='~/bin_scripts/change_icon.sh'
alias print_colors='~/bin_scripts/print_colors.sh'
alias print_256='~/bin_scripts/print_colors_256.sh'
alias remove_yaml='~/bin_scripts/yaml_remove.sh'

# OTHER
disable r
alias r='radian'
alias ls='exa --icons'
alias py='python'
alias ipy='ipython'

# -- CONDA --------------------------------------------------------------------

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/viggogascou/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/viggogascou/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/viggogascou/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/viggogascou/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

conda activate py310

# -- KEYBINDINGS --------------------------------------------------------------

# alt + left arrow
#bindkey "^[b"      backward-word
# alt + right arrow
#bindkey "^[f"      forward-word
# cmd + left arrow
#bindkey "^[[1;9D"  beginning-of-line
# cmd + right arrow
#bindkey "^[[1;9C"  end-of-line

bindkey '^[[A'     history-substring-search-up
bindkey '^[[B'     history-substring-search-down

# -- FINAL --------------------------------------------------------------------

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

