# -- DESCRIPTION --------------------------------------------------------------

# -*-mode:zsh-*- vim:ft=zsh

# ~/.zshrc
# =============================================================================
# Executed by Z shell for interactive shells.
#
# See http://zsh.sourceforge.net/Intro/intro_3.html

# -- INIT ---------------------------------------------------------------------

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# -- ZINIT --------------------------------------------------------------------

# MOVE ZSH_HISTORY
HISTFILE="${HOME}/.cache/zsh/.zsh_history"

# Make alt jumping through words treat $WORDCHARS as word delimiters i.e., the bash default 
autoload -U select-word-style
select-word-style bash

# MOVE ZCOMPDUMP AND SPEED UP LOADING
# FROM ZINIT README
# see zshcompsys(1) 'man zshcompsys' for meaning of '-C' option
declare -A ZINIT
ZINIT[ZCOMPDUMP_PATH]="${HOME}/.cache/zsh/.zcompdump-$ZSH_VERSION"
ZINIT[COMPINIT_OPTS]="-C"

# MOVE ZCOMPCACHE
zstyle ':completion::complete:*' cache-path "${HOME}/.cache/zsh/.zcompcache"

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust
### End of Zinit's installer chunk

# -- SNIPPETS -----------------------------------------------------------------

local local GH_RAW_URL='https://raw.githubusercontent.com'
install_git_completion(){ zinit for as'completion' nocompile id-as"$1" is-snippet "$GH_RAW_URL/$2"; }
install_local_completion() { zinit for as'completion' nocompile id-as"$1" is-snippet "$2"; }
install_git_completion 'fd-completion/_fd'         'sharkdp/fd/master/contrib/completion/_fd'
install_local_completion 'lsd-completion/_lsd'     '${XDG_DATA_HOME:-$HOME/.local/share}/zinit/plugins/Peltoche---lsd/lsd/autocomplete/_lsd'

# -- PLUGINS ------------------------------------------------------------------

zinit ice depth=1
zinit light romkatv/powerlevel10k
zinit light zsh-users/zsh-history-substring-search

zinit pick"misc/quitcd/quitcd.zsh" sbin make"O_NERD=1" light-mode for jarun/nnn

zinit wait lucid from"gh-r" as"null" for \
  sbin"fzf"          junegunn/fzf \
  sbin"**/fd"        @sharkdp/fd \
  sbin"**/bat"       @sharkdp/bat \
  mv"lsd* -> lsd" \
  sbin"**/lsd"       Peltoche/lsd \

zinit wait lucid light-mode for \
  wfxr/forgit \
  atload"_zsh_autosuggest_start" \
      zsh-users/zsh-autosuggestions \
  blockf atpull'zinit creinstall -q .' \
      zsh-users/zsh-completions \
      conda-incubator/conda-zsh-completion \
  atinit"zicompinit; zicdreplay" \
      zdharma-continuum/fast-syntax-highlighting \

# -- SETINGS ------------------------------------------------------------------

# History file settings
HISTSIZE=50000
SAVEHIST=10000
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt sharehistory

# Make the substring search only match if command starts with the same substring
# Usage from: https://bit.ly/zsh-substring-hist-conf
typeset -g HISTORY_SUBSTRING_SEARCH_PREFIXED='i'

# Make sure path and fpath do not contain duplicate entries
typeset -U fpath
typeset -U path

# Create LS_COLORS colorscheme from vivid colorscheme generator
export LS_COLORS="$(vivid generate ~/.config/vivid/themes/nord.yml)"

# Make the <tab> completion have the same colorscheme as $LS_COLORS and enable arrow-keys to move around
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' menu select

# Complete . and .. special directories
zstyle ':completion:*' special-dirs true

# Make <tab> completion case insensitive
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'

# -- PATH ---------------------------------------------------------------------

export PATH=$PATH:~/.local/bin

# -- SYSTEM ENV ---------------------------------------------------------------

export EDITOR='lvim'
export VISUAL='$EDITOR'

export LANG="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export COLORTERM="truecolor"

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

export NVM_DIR="$HOME/.config/nvm"

export NODE_REPL_HISTORY="$XDG_CACHE_HOME"/node/node_repl_history

# -- NNN SETTINGS -------------------------------------------------------------

if [ -f "$XDG_CONFIG_HOME"/zsh/nnn_settings ]; then
  source "$XDG_CONFIG_HOME"/zsh/nnn_settings
fi

# -- FUNCTIONS ----------------------------------------------------------------

if [ -f "$XDG_CONFIG_HOME"/zsh/zsh_functions ]; then
  source "$XDG_CONFIG_HOME"/zsh/zsh_functions
fi

# -- ALIASES ------------------------------------------------------------------

if [ -f "$XDG_CONFIG_HOME"/zsh/zsh_aliases ]; then
    source "$XDG_CONFIG_HOME"/zsh/zsh_aliases
fi

# -- CONDA --------------------------------------------------------------------

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/viggogascou/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/viggogascou/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/viggogascou/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/viggogascou/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# -- KEYBINDS --------------------------------------------------------------

bindkey '^[[A'     history-substring-search-up
bindkey '^[[B'     history-substring-search-down

bindkey '^[[Z' autosuggest-accept  # shift + tab  | autosuggest

# -- FINAL --------------------------------------------------------------------

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

